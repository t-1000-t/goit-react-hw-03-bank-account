{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","App/App.jsx","index.js"],"names":["module","exports","controls","styles","Controls","inputRef","onDeposit","onWithdraw","onSubmit","onChange","amount","className","ref","type","name","min","value","placeholder","onClick","balances","balance","Balance","income","expenses","role","aria-label","history","TransactionHistory","items","map","item","transactionType","date","dashboard","Dashboard","state","transactions","createRef","saveNote","note","id","shortid","generate","Date","toLocaleString","setState","getSumDeposit","result","filter","e","reduce","acc","Number","getSumWithdraw","console","log","hendleChange","currentTarget","match","hendleSubmit","preventDefault","reset","hendleButtonWithdraw","toast","error","position","POSITION","BOTTOM_CENTER","hendleButtonDeposit","conserveTransaction","localStorage","getItem","conserveBalance","conserveIncome","conserveExpenses","this","JSON","parse","prevProps","prevState","setItem","stringify","numValueInput","autoClose","transition","Zoom","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d4f14d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3MPxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__FxzYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history___RpYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__26B9y\",\"controls\":\"Dashboard_controls__2iEoq\",\"balance\":\"Dashboard_balance__3Ls7y\",\"history\":\"Dashboard_history__3S6bw\"};","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\nconst controls = [styles.controls];\r\n\r\nconst Controls = ({\r\n  inputRef,\r\n  onDeposit,\r\n  onWithdraw,\r\n  onSubmit,\r\n  onChange,\r\n  amount,\r\n}) => {\r\n  return (\r\n    <section className={controls}>\r\n      <form className=\"Form\" onSubmit={onSubmit}>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          min=\"0\"\r\n          onChange={onChange}\r\n          value={amount}\r\n          placeholder=\"0\"\r\n        />\r\n        <button name=\"Deposit\" type=\"button\" onClick={onDeposit}>\r\n          Deposit\r\n        </button>\r\n        <button name=\"Withdraw\" type=\"button\" onClick={onWithdraw}>\r\n          Withdraw\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  onDeposit: T.string.isRequired,\r\n  onWithdraw: T.func.isRequired,\r\n  onSubmit: T.func.isRequired,\r\n  onChange: T.func.isRequired,\r\n  amount: T.number,\r\n  inputRef: T.func.isRequired,\r\n};\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './Balance.module.css';\r\n\r\nconst balances = [styles.balance];\r\n\r\nconst Balance = ({ balance, income, expenses }) => {\r\n  return (\r\n    <section className={balances}>\r\n      <span role=\"img\" aria-label=\"high\">\r\n        ⬆️ {income}\r\n      </span>\r\n      <span role=\"img\" aria-label=\"low\">\r\n        ⬇️ {expenses}\r\n      </span>\r\n      <span role=\"img\" aria-label=\"balance\">\r\n        Balance: {balance}\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nBalance.propTypes = {\r\n  balance: T.string.isRequired,\r\n  income: T.string.isRequired,\r\n  expenses: T.string.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst history = [styles.history];\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={history}>\r\n      <thead>\r\n        <tr>\r\n          <th>Transaction</th>\r\n          <th>Amount</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr>\r\n            <td>{item.transactionType}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.date}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      transactionType: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component, createRef } from 'react';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport shortid from 'shortid';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport styles from './Dashboard.module.css';\r\n\r\nconst dashboard = [styles.dashboard];\r\n\r\nclass Dashboard extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    amount: '0',\r\n    balance: '0',\r\n    transactions: [],\r\n    income: '0',\r\n    expenses: '0',\r\n  };\r\n\r\n  inputRef = createRef();\r\n\r\n  componentDidMount() {\r\n    const conserveTransaction = localStorage.getItem('transactions');\r\n    const conserveBalance = localStorage.getItem('balance');\r\n    const conserveIncome = localStorage.getItem('income');\r\n    const conserveExpenses = localStorage.getItem('expenses');\r\n\r\n    if (conserveTransaction) {\r\n      this.setState({\r\n        transactions: JSON.parse(conserveTransaction),\r\n        balance: JSON.parse(conserveBalance),\r\n        income: JSON.parse(conserveIncome),\r\n        expenses: JSON.parse(conserveExpenses),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { transactions, balance, income, expenses } = this.state;\r\n\r\n    if (prevState.transactions !== transactions) {\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n      localStorage.setItem('balance', JSON.stringify(balance));\r\n      localStorage.setItem('income', JSON.stringify(income));\r\n      localStorage.setItem('expenses', JSON.stringify(expenses));\r\n    }\r\n  }\r\n\r\n  saveNote = (amount, transactionType) => {\r\n    const note = {\r\n      id: shortid.generate(),\r\n      date: new Date().toLocaleString(),\r\n      amount,\r\n      transactionType,\r\n    };\r\n\r\n    this.setState(state => ({\r\n      transactions: [...state.transactions, note],\r\n    }));\r\n  };\r\n\r\n  getSumDeposit = transactions => {\r\n    const { amount } = this.state;\r\n    const result = [\r\n      ...transactions.filter(e => e.transactionType === 'Deposit'),\r\n    ].reduce((acc, e) => {\r\n      return Number(acc) + Number(e.amount);\r\n    }, Number(amount));\r\n    this.setState({\r\n      income: result,\r\n    });\r\n  };\r\n\r\n  getSumWithdraw = transactions => {\r\n    const { amount } = this.state;\r\n    const result = [\r\n      ...transactions.filter(e => e.transactionType === 'Withdraw'),\r\n    ].reduce((acc, e) => {\r\n      return Number(acc) + Number(e.amount);\r\n    }, Number(amount));\r\n    console.log(result);\r\n    this.setState({\r\n      expenses: result,\r\n    });\r\n  };\r\n\r\n  hendleChange = e => {\r\n    if (e.currentTarget.value.match(/^\\d+$/, '')) {\r\n      this.setState({\r\n        amount: e.currentTarget.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      amount: '0',\r\n    });\r\n  };\r\n\r\n  hendleButtonWithdraw = e => {\r\n    const { amount, balance, transactions } = this.state;\r\n    if (amount === '0') {\r\n      toast.error('Введите сумму для проведения операции!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n      return;\r\n    }\r\n    const transactionType = e.currentTarget.name;\r\n    if (Number(amount) > Number(balance) && Number(balance) !== 0) {\r\n      toast.error('На счету недостаточно средств для проведения операции!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      balance: Number(balance) - Number(amount),\r\n    });\r\n    this.saveNote(amount, transactionType);\r\n    this.getSumWithdraw(transactions);\r\n  };\r\n\r\n  hendleButtonDeposit = e => {\r\n    const { amount, balance, transactions } = this.state;\r\n    if (amount === '0') {\r\n      toast.error('Введите сумму для проведения операции!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n      return;\r\n    }\r\n    const transactionType = e.currentTarget.name;\r\n    this.saveNote(amount, transactionType);\r\n    if (Number(amount) > 0) {\r\n      this.setState({\r\n        balance: Number(balance) + Number(amount),\r\n      });\r\n    }\r\n    this.getSumDeposit(transactions);\r\n  };\r\n\r\n  render() {\r\n    const { balance, transactions, amount, expenses, income } = this.state;\r\n\r\n    return (\r\n      <div className={dashboard}>\r\n        <Controls\r\n          onDeposit={this.hendleButtonDeposit}\r\n          onWithdraw={this.hendleButtonWithdraw}\r\n          onSubmit={this.hendleSubmit}\r\n          onChange={this.hendleChange}\r\n          numValueInput={amount}\r\n          inputRef={this.inputRef}\r\n        />\r\n        <Balance balance={balance} expenses={expenses} income={income} />\r\n        <TransactionHistory items={transactions} />\r\n        <ToastContainer autoClose={2500} transition={Zoom} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Dashboard from '../components/Dashboard/Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App/App.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}