{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Service/localStorage.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","controls","styles","Controls","state","amount","hendleChange","e","setState","Number","currentTarget","value","toFixed","hendleSubmit","preventDefault","reset","handleBtnDeposit","toast","warn","position","POSITION","BOTTOM_LEFT","props","onDeposit","handleBtnWithdraw","onBalance","onWithdraw","error","this","className","id","onSubmit","type","name","min","step","onChange","placeholder","onClick","autoClose","transition","Zoom","Component","balances","balance","Balance","income","expenses","role","aria-label","history","ids","shortid","generate","TransactionHistory","items","map","item","key","date","val","localStorage","setItem","JSON","stringify","err","console","log","trans","getItem","parse","dashboard","Dashboard","transactions","note","Date","toLocaleString","sumType","filter","reduce","acc","newLocStore","prevProps","prevState","length","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0364d592.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3MPxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__FxzYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history___RpYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__26B9y\",\"controls\":\"Dashboard_controls__2iEoq\",\"balance\":\"Dashboard_balance__3Ls7y\",\"history\":\"Dashboard_history__3S6bw\"};","import React, { Component } from 'react';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport T from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\nconst controls = [styles.controls];\r\n\r\nclass Controls extends Component {\r\n  static propTypes = {\r\n    onBalance: T.string.isRequired,\r\n    onDeposit: T.func.isRequired,\r\n    onWithdraw: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    amount: '',\r\n  };\r\n\r\n  hendleChange = e => {\r\n    this.setState({\r\n      amount: Number(e.currentTarget.value).toFixed(2),\r\n    });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      amount: '',\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      amount: '',\r\n    });\r\n  };\r\n\r\n  handleBtnDeposit = () => {\r\n    const { amount } = this.state;\r\n\r\n    if (Number(amount === '0.00' || amount === '')) {\r\n      toast.warn('Введите сумму для проведения операции!', {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    } else if (Number(amount) > 0) {\r\n      this.props.onDeposit(amount);\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  handleBtnWithdraw = () => {\r\n    const { amount } = this.state;\r\n    if (Number(amount) > 0 && Number(amount) <= this.props.onBalance) {\r\n      if (Number(amount) > 0) {\r\n        this.props.onWithdraw(this.state.amount);\r\n        this.reset();\r\n      }\r\n    } else {\r\n      toast.error('На счету недостаточно средств для проведения операции!', {\r\n        position: toast.POSITION.BOTTOM_LEFT,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { amount } = this.state;\r\n\r\n    return (\r\n      <section className={controls}>\r\n        <form id=\"form\" className=\"Form\" onSubmit={this.hendleSubmit}>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            min=\"0.00\"\r\n            step=\"0.01\"\r\n            onChange={this.hendleChange}\r\n            value={amount}\r\n            placeholder=\"введите сумму\"\r\n          />\r\n          <button name=\"Deposit\" type=\"button\" onClick={this.handleBtnDeposit}>\r\n            Deposit\r\n          </button>\r\n\r\n          <button\r\n            name=\"Withdraw\"\r\n            type=\"button\"\r\n            onClick={this.handleBtnWithdraw}\r\n          >\r\n            Withdraw\r\n          </button>\r\n          <ToastContainer autoClose={2500} transition={Zoom} />\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst balances = [styles.balance];\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={balances}>\r\n    <span role=\"img\" aria-label=\"high\">\r\n      ⬆️ {Number(income).toFixed(2)}$\r\n    </span>\r\n    <span role=\"img\" aria-label=\"low\">\r\n      ⬇️ {Number(expenses).toFixed(2)}$\r\n    </span>\r\n    <span role=\"img\" aria-label=\"balance\">\r\n      Balance: {Number(balance).toFixed(2)}$\r\n    </span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst history = [styles.history];\r\n\r\nconst ids = {\r\n  id: shortid.generate(),\r\n};\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={ids.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}$</td>\r\n          <td>{item.date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      type: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","const saveStorage = (key, val) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(val));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nconst getStorage = key => {\r\n  try {\r\n    const trans = localStorage.getItem(key);\r\n    return trans ? JSON.parse(trans) : '';\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default { saveStorage, getStorage };\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport styles from './Dashboard.module.css';\r\nimport newLocStore from '../Service/localStorage';\r\n\r\nconst dashboard = [styles.dashboard];\r\n\r\nclass Dashboard extends Component {\r\n  static propTypes = {};\r\n\r\n  static defaultProps = {\r\n    balance: '',\r\n  };\r\n\r\n  state = {\r\n    balance: '',\r\n    transactions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const balance = newLocStore.getStorage('balance');\r\n    const transactions = newLocStore.getStorage('transactions');\r\n\r\n    if (balance && transactions) {\r\n      this.setState({ transactions, balance });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { transactions, balance } = this.state;\r\n\r\n    if (prevState.transactions !== transactions) {\r\n      newLocStore.saveStorage('transactions', transactions);\r\n    }\r\n\r\n    if (prevState.balance !== balance) {\r\n      newLocStore.saveStorage('balance', balance);\r\n    }\r\n  }\r\n\r\n  handleBtnDeposit = amount => {\r\n    const note = {\r\n      id: shortid.generate(),\r\n      date: new Date().toLocaleString(),\r\n      amount,\r\n      type: 'Deposit',\r\n    };\r\n    this.setState(state => ({\r\n      transactions: [note, ...state.transactions],\r\n      balance: (Number(state.balance) + Number(amount)).toFixed(2),\r\n    }));\r\n  };\r\n\r\n  handleBtnWithdraw = amount => {\r\n    const note = {\r\n      id: shortid.generate(),\r\n      date: new Date().toLocaleString(),\r\n      amount,\r\n      type: 'Withdraw',\r\n    };\r\n    this.setState(state => ({\r\n      transactions: [note, ...state.transactions],\r\n      balance: Number(state.balance) - Number(amount),\r\n    }));\r\n  };\r\n\r\n  sumType = type => {\r\n    const { transactions } = this.state;\r\n    return transactions\r\n      .filter(e => e.type === type)\r\n      .reduce((acc, e) => Number(acc) + Number(e.amount), 0);\r\n  };\r\n\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    return (\r\n      <div className={dashboard}>\r\n        <Controls\r\n          onDeposit={this.handleBtnDeposit}\r\n          onWithdraw={this.handleBtnWithdraw}\r\n          onBalance={balance}\r\n        />\r\n        <Balance\r\n          income={this.sumType('Deposit')}\r\n          expenses={this.sumType('Withdraw')}\r\n          balance={balance}\r\n        />\r\n        {transactions.length > 0 && <TransactionHistory items={transactions} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Dashboard />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './components/App/App.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}